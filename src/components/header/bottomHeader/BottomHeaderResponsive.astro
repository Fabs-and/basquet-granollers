---
import { logoSmall } from "@assets/logo";
import { magnifyingGlass, hamburgerMenuIcon } from "@assets/icons";

import DropDownAccordion from "./DropDownAccordion.astro";

import SocialMediaMenu from "@components/SocialMediaMenu.astro";
import SearchWidgetResponsive from "@components/SearchWidgetResponsive.svelte";

const { navigation, topHeaderContent, websiteContent } = Astro.props;

const { text1, link1 } = topHeaderContent![0];
const { text2, link2 } = topHeaderContent![0];
---

<script>
  function handleClick(this: any) {
    let div = document.querySelector(
      ".dropdown-content-responsive",
    ) as HTMLDivElement;

    if (div) {
      // Toggle the 'visible' class
      if (div.classList.contains("visible")) {
        div.classList.remove("visible");
      } else {
        div.classList.add("visible");
      }
    }
  }

  let buttons = document.querySelectorAll(".dropdown-menu");

  buttons.forEach(function (button) {
    // Add the event listener to each button
    button.addEventListener("click", handleClick);
  });
</script>

<div class={`flex-container`}>
  <button class="dropdown-menu">
    <Fragment set:html={hamburgerMenuIcon} />
  </button>
  <a
    class="logo"
    title="Club Bàsquet Granollers Logo"
    aria-label="Club Bàsquet Granollers Logo"
    href="/"><Fragment set:html={logoSmall} /></a
  >

  <div class="search-icon">
    <SearchWidgetResponsive client:load {websiteContent} />
  </div>
</div>

<ul id="myDropdown" class={`dropdown-content-responsive`}>
  {
    text1 && (
      <li class="top-header-link">
        {!link1 ? (
          <p>{text1.toUpperCase()}</p>
        ) : link1.includes("http") ? (
          <a
            href={link1}
            class="underline-links"
            target="_blank"
            rel="noopener noreferrer"
          >
            {text1.toUpperCase()}
          </a>
        ) : (
          <a href={link1} class="underline-links">
            {text1.toUpperCase()}
          </a>
        )}
      </li>
    )
  }
  {
    text2 && (
      <li class="top-header-link">
        {!link2 ? (
          <p>{text2.toUpperCase()}</p>
        ) : link2.includes("http") ? (
          <a
            href={link2}
            class="underline-links"
            target="_blank"
            rel="noopener noreferrer"
          >
            {text2.toUpperCase()}
          </a>
        ) : (
          <a href={link2} class="underline-links">
            {text2.toUpperCase()}
          </a>
        )}
      </li>
    )
  }

  {
    navigation.map((item) => (
      <li>
        {item.dropdown ? (
          <DropDownAccordion {item} />
        ) : item.link.includes("http") ? (
          <a href={item.link} target="_blank" rel="noopener noreferrer">
            <h5>{item.name!.toUpperCase()}</h5>{" "}
          </a>
        ) : (
          <a href={item.link}>
            <h5>{item.name!.toUpperCase()}</h5>
          </a>
        )}
      </li>
    ))
  }
  <div class="social-media-container">
    <SocialMediaMenu />
  </div>
</ul>

<style>
  .top-header-link {
    margin-inline: auto;
  }

  .top-header-link > a {
    color: var(--clr-contrast);
    font-size: var(--fnt-sz-h5);
    font-weight: var(--fnt-wg-medium);
    font-style: italic;
    text-decoration: underline;
  }

  .dropdown-content-responsive {
    position: fixed;
    display: flex;
    background-color: var(--clr-primary);
    color: var(--clr-contrast);
    top: calc(
      var(--hg-header-bottom-section) + var(--hg-header-top-section) +
        var(--hg-sponsors-all-responsive)
    );
    left: 0;
    right: 0;
    bottom: 0;
    padding-inline: var(--pd-x-medium);
    padding-block: 2.06rem;
    flex-direction: column;
    gap: 1.87rem;
    transform: translateX(-100%);
    transition: transform 0.2s ease-in-out;
  }

  .social-media-container {
    margin-top: auto;
  }
  .dropdown-content-responsive.visible {
    transform: translateX(0);
  }
  .dropdown-content-responsive h5 {
    color: var(--clr-contrast);
  }
  .dropdown-content a {
    color: var(--clr-contrast);
    text-decoration: none;
    display: block;
  }
  .flex-container {
    min-height: var(--hg-header-bottom-section);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 0.35rem;
  }

  .logo {
  }
  .search-icon:hover {
    cursor: pointer;
  }

  a {
    color: var(--clr-primary);
    font-weight: var(--fnt-wg-medium);
  }

  @media (width < 648px) {
    .dropdown-content-responsive {
      top: calc(
        var(--hg-header-bottom-section) + var(--hg-sponsors-all-responsive)
      );
      padding-inline: var(--pd-x-small);
    }
  }
</style>
